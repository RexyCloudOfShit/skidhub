-- Vanity UI Library
-- Usage: local Vanity = loadstring(game:HttpGet("https://yourlink.com/VanityUI.lua"))()

local Vanity = {}
Vanity.__index = Vanity

-- Services
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

-- Helper function to create UI elements
local function create(class, props, parent)
	local inst = Instance.new(class)
	for prop, val in pairs(props) do
		inst[prop] = val
	end
	if parent then
		inst.Parent = parent
	end
	return inst
end

-- Main create window function
function Vanity:CreateWindow(config)
	local gui = create("ScreenGui", {
		Name = "VanityUI",
		ResetOnSpawn = false
	}, LocalPlayer:WaitForChild("PlayerGui"))

	local main = create("Frame", {
		Size = UDim2.new(0, 850, 0, 520),
		Position = UDim2.new(0.5, -425, 0.5, -260),
		BackgroundColor3 = Color3.fromRGB(18, 18, 18),
		BorderSizePixel = 0,
	}, gui)
	create("UICorner", { CornerRadius = UDim.new(0, 10) }, main)

	local tabs = {}
	local leftSections = {}
	local rightSections = {}

	function main:AddTab(name)
		local tab = {}

		tab.Frame = create("Frame", {
			Size = UDim2.new(1, -130, 1, -50),
			Position = UDim2.new(0, 130, 0, 50),
			BackgroundTransparency = 1,
			Name = name .. "Tab"
		}, main)

		tab.Left = create("Frame", {
			Size = UDim2.new(0.48, -10, 1, 0),
			Position = UDim2.new(0, 0, 0, 0),
			BackgroundTransparency = 1
		}, tab.Frame)

		tab.Right = create("Frame", {
			Size = UDim2.new(0.48, -10, 1, 0),
			Position = UDim2.new(0.52, 10, 0, 0),
			BackgroundTransparency = 1
		}, tab.Frame)

		function tab:AddLeftGroupbox(title)
			return Vanity:_createGroupbox(tab.Left, title)
		end

		function tab:AddRightGroupbox(title)
			return Vanity:_createGroupbox(tab.Right, title)
		end

		tabs[name] = tab
		return tab
	end

	return setmetatable({ Tabs = tabs }, { __index = main })
end

-- Create a group box
function Vanity:_createGroupbox(parent, title)
	local box = {}
	box.Frame = create("Frame", {
		Size = UDim2.new(1, -10, 0, 180),
		BackgroundColor3 = Color3.fromRGB(35, 35, 35),
		BorderSizePixel = 0
	}, parent)
	create("UICorner", { CornerRadius = UDim.new(0, 6) }, box.Frame)

	local label = create("TextLabel", {
		Text = title,
		Font = Enum.Font.GothamBold,
		TextColor3 = Color3.fromRGB(255, 255, 255),
		TextSize = 14,
		BackgroundTransparency = 1,
		Size = UDim2.new(1, -20, 0, 30),
		Position = UDim2.new(0, 10, 0, 10),
		TextXAlignment = Enum.TextXAlignment.Left
	}, box.Frame)

	local layout = create("UIListLayout", {
		SortOrder = Enum.SortOrder.LayoutOrder,
		Padding = UDim.new(0, 6)
	}, box.Frame)

	function box:AddToggle(id, config)
		local toggle = create("TextButton", {
			Text = config.Text,
			Font = Enum.Font.Gotham,
			TextSize = 14,
			TextColor3 = config.Risky and Color3.fromRGB(255, 85, 85) or Color3.fromRGB(255, 255, 255),
			BackgroundColor3 = Color3.fromRGB(40, 40, 40),
			Size = UDim2.new(1, -20, 0, 30),
			AutoButtonColor = false
		}, box.Frame)
		create("UICorner", { CornerRadius = UDim.new(0, 6) }, toggle)

		local state = config.Default or false
		toggle.MouseButton1Click:Connect(function()
			state = not state
			if config.Callback then config.Callback(state) end
		end)
	end

	function box:AddDivider()
		create("Frame", {
			Size = UDim2.new(1, -20, 0, 2),
			BackgroundColor3 = Color3.fromRGB(100, 100, 100)
		}, box.Frame)
	end

	function box:AddSlider(id, config)
		local frame = create("Frame", {
			Size = UDim2.new(1, -20, 0, 30),
			BackgroundTransparency = 1
		}, box.Frame)

		local label = create("TextLabel", {
			Text = config.Text .. ": " .. tostring(config.Default or 0) .. (config.Sufix or ""),
			Font = Enum.Font.Gotham,
			TextColor3 = Color3.fromRGB(255, 255, 255),
			TextSize = 14,
			BackgroundTransparency = 1,
			Size = UDim2.new(1, 0, 1, 0)
		}, frame)

		-- Not a real slider, just a label update example
		-- Full slider behavior can be scripted later
		if config.Callback then
			config.Callback(config.Default or 0)
		end
	end

	return box
end

return Vanity
